umask 022

TMPDIR=/dev/tmp
PERSISTDIR=/sbin/.magisk/mirror/persist

rm -rf $TMPDIR 2>/dev/null
mkdir -p $TMPDIR

ui_print() { echo "$1"; }

require_new_magisk() {
  ui_print "*******************************"
  ui_print " 请安装 Magisk V20.4+! "
  ui_print "*******************************"
  exit 1
}

is_legacy_script() {
  unzip -l "$ZIPFILE" install.sh | grep -q install.sh
  return $?
}

print_modname() {
  ui_print "-  "
  ui_print "- 模块名称："
  ui_print "- $MODNAME"
  ui_print "-  "
}

OUTFD=$2
ZIPFILE=$3

mount /data 2>/dev/null

[ -f /data/adb/magisk/util_functions.sh ] || require_new_magisk
. /data/adb/magisk/util_functions.sh
[ $MAGISK_VER_CODE -gt 18100 ] || require_new_magisk

setup_flashable

mount_partitions

api_level_arch_detect

$BOOTMODE && boot_actions || recovery_actions

unzip -o "$ZIPFILE" module.prop -d $TMPDIR >&2
[ ! -f $TMPDIR/module.prop ] && abort "! 从 zip 中提取文件失败!"

$BOOTMODE && MODDIRNAME=modules_update || MODDIRNAME=modules
MODULEROOT=$NVBASE/$MODDIRNAME
MODID=`grep_prop id $TMPDIR/module.prop`
MODPATH=$MODULEROOT/$MODID
MODNAME=`grep_prop name $TMPDIR/module.prop`

rm -rf $MODPATH 2>/dev/null
mkdir -p $MODPATH

if is_legacy_script; then
  unzip -oj "$ZIPFILE" module.prop install.sh uninstall.sh 'common/*' -d $TMPDIR >&2

  . $TMPDIR/install.sh

  print_modname
  on_install

  [ -f $TMPDIR/uninstall.sh ] && cp -af $TMPDIR/uninstall.sh $MODPATH/uninstall.sh

  $SKIPMOUNT && touch $MODPATH/skip_mount

  $PROPFILE && cp -af $TMPDIR/system.prop $MODPATH/system.prop

  cp -af $TMPDIR/module.prop $MODPATH/module.prop

  $POSTFSDATA && cp -af $TMPDIR/post-fs-data.sh $MODPATH/post-fs-data.sh

  $LATESTARTSERVICE && cp -af $TMPDIR/service.sh $MODPATH/service.sh

  ui_print "- 正在设置权限..."
  set_permissions
else
  print_modname

  unzip -o "$ZIPFILE" customize.sh -d $MODPATH >&2

  if ! grep -q '^SKIPUNZIP=1$' $MODPATH/customize.sh 2>/dev/null; then
    unzip -o "$ZIPFILE" -x 'META-INF/*' -d $MODPATH >&2

    set_perm_recursive $MODPATH 0 0 0755 0644
  fi

  [ -f $MODPATH/customize.sh ] && . $MODPATH/customize.sh
fi

for TARGET in $REPLACE; do
  ui_print "- 正在删除目标文件：$TARGET"
  mktouch $MODPATH$TARGET/.replace
done

if $BOOTMODE; then
  mktouch $NVBASE/modules/$MODID/update
  cp -af $MODPATH/module.prop $NVBASE/modules/$MODID/module.prop
fi

if [ -f $MODPATH/sepolicy.rule -a -e $PERSISTDIR ]; then
  ui_print "- 安装自定义sepolicy补丁"
  PERSISTMOD=$PERSISTDIR/magisk/$MODID
  mkdir -p $PERSISTMOD
  cp -af $MODPATH/sepolicy.rule $PERSISTMOD/sepolicy.rule
fi

rm -rf \
$MODPATH/system/placeholder $MODPATH/customize.sh \
$MODPATH/README.md $MODPATH/.git* 2>/dev/null

cd /
$BOOTMODE || recovery_cleanup
rm -rf $TMPDIR
exit 0